<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlfaNumericNeeded" xml:space="preserve">
    <value>Se necesita un valor numérico</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Todo</value>
  </data>
  <data name="AlreadyPrimary" xml:space="preserve">
    <value>Ya existe un elemento principal.</value>
  </data>
  <data name="AppointmentTypeDoesNotExists" xml:space="preserve">
    <value>NO existe el tipo de cita</value>
  </data>
  <data name="AppointmentTypeNeeded" xml:space="preserve">
    <value>Se necesita un tipo de cita</value>
  </data>
  <data name="BadLogin" xml:space="preserve">
    <value>Usuario o contraseña incorrectos</value>
  </data>
  <data name="BeginEndDateTimeNeeded" xml:space="preserve">
    <value>Se necesita una fecha / hora de comienzo y final.</value>
  </data>
  <data name="BeginHourNeeded" xml:space="preserve">
    <value>Se necesita una hora de comienzo</value>
  </data>
  <data name="BornDateNeeded" xml:space="preserve">
    <value>Debe introducir fecha de nacimiento</value>
  </data>
  <data name="ContainsTicketsInvoiced" xml:space="preserve">
    <value>La nota contiene tickets ya facturados.</value>
  </data>
  <data name="CorrectlyStored" xml:space="preserve">
    <value>Guardado correctamente.</value>
  </data>
  <data name="CustomerDoesNotExists" xml:space="preserve">
    <value>El cliente no existe</value>
  </data>
  <data name="CustomerNeeded" xml:space="preserve">
    <value>Se necesita un cliente / paciente</value>
  </data>
  <data name="DateNeeded" xml:space="preserve">
    <value>Se necesita una fecha</value>
  </data>
  <data name="DeleteInvoiceFailed" xml:space="preserve">
    <value>Fallo la eliminación de factura. Posiblemente hay facturas emitidas con posterioridad.</value>
  </data>
  <data name="DeleteRecord" xml:space="preserve">
    <value>Borrar registro</value>
  </data>
  <data name="DeleteRecordFail" xml:space="preserve">
    <value>Falló la eliminación del registro, posiblemente hay registros relacionados que impiden su borrado.</value>
  </data>
  <data name="DeleteRecordQuestion" xml:space="preserve">
    <value>¿Desea realmente borrar el registro?</value>
  </data>
  <data name="DiagnosticNeeded" xml:space="preserve">
    <value>Se necesita un diagnóstico</value>
  </data>
  <data name="DiaryDoesNotExists" xml:space="preserve">
    <value>NO existe la agenda</value>
  </data>
  <data name="DiaryNeeded" xml:space="preserve">
    <value>Se necesita una agenda</value>
  </data>
  <data name="DrugNeeded" xml:space="preserve">
    <value>Se necita un fármaco</value>
  </data>
  <data name="EndHourNeeded" xml:space="preserve">
    <value>Se necesita una hora de final</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ExaminationNeeded" xml:space="preserve">
    <value>Se necesita una exploración</value>
  </data>
  <data name="FromGreatherThanTo" xml:space="preserve">
    <value>Desde mayor que hasta</value>
  </data>
  <data name="IncorrectInvoiceDate" xml:space="preserve">
    <value>Fecha incorrecta. Hay facturas de fecha posterior.</value>
  </data>
  <data name="InsuranceServiceDoesNotExists" xml:space="preserve">
    <value>No existe el servicio asegurado</value>
  </data>
  <data name="InsuranceServiceNeeded" xml:space="preserve">
    <value>Se necesita un servicio asegurado</value>
  </data>
  <data name="InvoiceError" xml:space="preserve">
    <value>Error en la factura</value>
  </data>
  <data name="InvoiceSerialNeeded" xml:space="preserve">
    <value>Se necesita una serie de facturación</value>
  </data>
  <data name="LabTestNeeded" xml:space="preserve">
    <value>Se necesita una prueba de laboratorio</value>
  </data>
  <data name="LBTA" xml:space="preserve">
    <value>Alfanumérico</value>
  </data>
  <data name="LBTN" xml:space="preserve">
    <value>Numérico</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Mensaje</value>
  </data>
  <data name="NameNeeded" xml:space="preserve">
    <value>Se necesita un nombre / descripción.</value>
  </data>
  <data name="NoNomenclatorService" xml:space="preserve">
    <value>La aseguradora no tiene el servicio asignado en nomenclator.</value>
  </data>
  <data name="NoPainPump" xml:space="preserve">
    <value>La aseguradora no tiene un servicio de bomba de dolor</value>
  </data>
  <data name="NoPrimaryPolicy" xml:space="preserve">
    <value>El cliente no tiene una póliza principal asignada</value>
  </data>
  <data name="NumericNeeded" xml:space="preserve">
    <value>Se necesita un valor numérico</value>
  </data>
  <data name="ParameterError" xml:space="preserve">
    <value>Error de  parámetros</value>
  </data>
  <data name="PassordsDoesntMach" xml:space="preserve">
    <value>Las contraseñas no coinciden</value>
  </data>
  <data name="PatientDoesNotExists" xml:space="preserve">
    <value>No existe el paciente</value>
  </data>
  <data name="PatientNeeded" xml:space="preserve">
    <value>Se necesita un paciente</value>
  </data>
  <data name="PaymentMethodNeeded" xml:space="preserve">
    <value>Se necesita una forma de pago</value>
  </data>
  <data name="PaymentsDone" xml:space="preserve">
    <value>Cobros realizados</value>
  </data>
  <data name="PaymentsUnDone" xml:space="preserve">
    <value>Cobros eliminados</value>
  </data>
  <data name="PolicyNeeded" xml:space="preserve">
    <value>Se necesita seleccionar una póliza</value>
  </data>
  <data name="PossibleIncorrectVAT" xml:space="preserve">
    <value>El NIF parece incorrecto, el sistema ha intentado corregirlo. Verifique que es correcto. Gracias.</value>
  </data>
  <data name="PrimaryTypeNeeded" xml:space="preserve">
    <value>Se necesita por lo menos un elemento de tipo principal.</value>
  </data>
  <data name="ProcedureDoesNotExists" xml:space="preserve">
    <value>No existe el procedimiento</value>
  </data>
  <data name="ProcedureNeeded" xml:space="preserve">
    <value>Se necesita un procedimiento</value>
  </data>
  <data name="ProfessionalDoesNotExists" xml:space="preserve">
    <value>No existe el profesional</value>
  </data>
  <data name="ProfessionalNeeded" xml:space="preserve">
    <value>Se necesita un profesional</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Aviso</value>
  </data>
  <data name="RecordRefreshed" xml:space="preserve">
    <value>Registro actualizado</value>
  </data>
  <data name="ServiceCategoryNeeded" xml:space="preserve">
    <value>Debe asignar el servicio a una categoria</value>
  </data>
  <data name="ServiceDoesNotExists" xml:space="preserve">
    <value>No existe el sevicio</value>
  </data>
  <data name="ServiceNeeded" xml:space="preserve">
    <value>Se necesita un servicio</value>
  </data>
  <data name="ServiceNoteLinesNedeed" xml:space="preserve">
    <value>Debe introducir los tickets asociados a esta nota.</value>
  </data>
  <data name="SexValueNeeded" xml:space="preserve">
    <value>Especifique el sexo</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Correcto</value>
  </data>
  <data name="TaxTypeNeeded" xml:space="preserve">
    <value>Debe asignar un tipo de IVA</value>
  </data>
  <data name="TaxWitholdingNeeded" xml:space="preserve">
    <value>Se necesita un tipo de retención</value>
  </data>
  <data name="TicketAmountExceeded" xml:space="preserve">
    <value>La suma de cobros supera el importe del ticket</value>
  </data>
  <data name="TicketDoesNotExists" xml:space="preserve">
    <value>No existe el ticket</value>
  </data>
  <data name="TicketNeeded" xml:space="preserve">
    <value>Se necesita un ticket</value>
  </data>
  <data name="UnitTypeNeeded" xml:space="preserve">
    <value>Se necesita un tipo de unidad</value>
  </data>
  <data name="UserNeedsPassword" xml:space="preserve">
    <value>Un usuario nuevo necesita contraseña</value>
  </data>
  <data name="ValueNeeded" xml:space="preserve">
    <value>Se necesita un valor</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Advertencia</value>
  </data>
  <data name="ClinicNeeded" xml:space="preserve">
    <value>Se necesita una clínica</value>
  </data>
  <data name="PayInNote" xml:space="preserve">
    <value>El ticket pertenece a una nota y debe ser pagado en ella</value>
  </data>
  <data name="PreviousMedicalRecord" xml:space="preserve">
    <value>Historial anterior</value>
  </data>
  <data name="TwoButtonsWarning" xml:space="preserve">
    <value>Dispone de dos botones (arriba y abajo derecha) para guardar los datos, si hace modificaciones guárdelas haciendo clic en cualquiera de ellos.</value>
  </data>
  <data name="DataStoredOk" xml:space="preserve">
    <value>Los datos han sido guardados.</value>
  </data>
  <data name="AckGinecology" xml:space="preserve">
    <value>Antecedente ginecológico</value>
  </data>
  <data name="BackFamily" xml:space="preserve">
    <value>Antecedente familiar</value>
  </data>
  <data name="BackPersonal" xml:space="preserve">
    <value>Antecedente personal</value>
  </data>
  <data name="VisitFirstAccept" xml:space="preserve">
    <value>Se han guardado los datos básicos de la visita, ahora se han abierto las solapas por si desea introducir información detallada. Cuando termine de instroducir datos vuelva a darle a "Aceptar" para cerra esta ventana y actualizar la lista.</value>
  </data>
  <data name="BeginGreaterThanEndDates" xml:space="preserve">
    <value>La fecha final no puede ser menor que la de inicio.</value>
  </data>
  <data name="PatientOrCandidateNeeded" xml:space="preserve">
    <value>Se necesita un paciente o un candidato</value>
  </data>
  <data name="RequestInformationNeeded" xml:space="preserve">
    <value>Se necesitan la información solicitada.</value>
  </data>
  <data name="SmsParameterNeeded" xml:space="preserve">
    <value>Se necesitan parámetros SMS para esta opción.</value>
  </data>
  <data name="InsuranceNeeded" xml:space="preserve">
    <value>Se necesita una aseguradora.</value>
  </data>
</root>