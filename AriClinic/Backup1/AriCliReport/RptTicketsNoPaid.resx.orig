<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<<<<<<< HEAD
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=5.0.11.510, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
=======
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=5.0.11.316, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
>>>>>>> 3a0a51800d371999c611e4d5b461bddded375ed1
    <value>0.1in</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAF0AAAAeCAYAAABOvRIBAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOtgAA
<<<<<<< HEAD
        DrYBzsi5pQAAC4ZJREFUaEPtWgl0lcUVjt2oEgiLICL7KiKecrRWWiuVYlGRfZMtbLIVaBUFAalFFkHA
        DUGqWIVyRKymHKqIrVKW5CV5edlDQjZICAlrgOxkv/2++2eeLy8hG4ETj8w575A3b2b+O9/c+93vzs8t
        d88MFo+b7cYiQNBvfm4sBh7XA/Cez1ib6PGMo9yBsr/bdEeF/uthQ0Nes95BJ7C9ZgVL6/GB0tE7SFqN
        C5DuMxzC/jsnBMhvF0VIpylBCj6B6YmD4achg1TfttU76DSQQL/xr1TJzS8RW0ymtJ1oB+B2WffPU8Jm
        i87E90AFngfQYbL9B+X99Q56VwDZbXqwgmva9DfjxHOYTRxx2c6+jt526TrNIREncuX4mTxp/XSARkN9
        e1VDXO+aQDcgdQfQHQCioZFW4/zVy03rtzBM2sGbu0wNkq37zsijiyPkrkl2ue+PIVJSWqrD2oB62oCS
        3PNAQwTtWm2qM+gG8I5T7ODwEBm5OkZ6ziRd2KUzKOPBP4XJq5+myKhVMdJuUqB6MOmEtEJK4ffOU+3y
        0HPh8sCCMOkB3l+wNVF6za6YgK91kw1tfp1B50ZID79eGCHpWYXqrRcyCuXBP4cJKabLtCC5HdxOvu7F
        hHkVadoV4zog4T6+PErXGPBihDPJNjSw6sueOoNOID1H2uSroEvl+NvH74I0RT9/p8fTswlsdQZ3AvW0
        GOsP769+bHVrNfTf6ww6N9Z8jL9s+/pMOdA3/ztNWqKfnD1waZTM35Ig94M+2uN7dWD8UKRjnUEnQF2n
        B6nicMRlKfABx7L0u9dom6z5JKXcYYxYGY2DsLj9enyYE5gzbkTxdTWqrOm+6gQ6VQglXp+5oVAdgeLx
        +BHl7yYjbJocqUDcW3pmobTCHBrGKGg+JkDugn6vqaFURs1HBwgTt1VUWYdH6mqOQ2Z++SWSNz/tkUda
        jg3Q5GzW7wYHaYFnst8UZu1oB9a8A6qpplFGwEmdd04M1Lmkz5ruwYyrNejc5L1zQsUfXl1UXCpp6fky
        Zk2MPpyVKBPoL+aFVAA9K7dIi6TW4wNk4fvHJfpkrszdnKBSsjqjCVifuSESn5Yn3htioYas5Nx+ciBs
        CREfv3TJyitWewrxSUdC37Q3Tcd1A/B0Eib48OPZcjgyU/otDFcnWfJhkoQl5siOb8+q5K0p8K3GBaL4
        OyWhCTmyBXRKx6tuD66/1xp0r1H+8m3Y5XKgFhaVOnX63fDAphiTmHal3Jj3958B1wdgs4Fy+mK+/haf
        louIqdrLCC4Psu+CUJ3z8s5kndMJEXU/+jJyiyscsOkIP54jnsNtatsjuH4wbcCLkXLbMD/Zffi8dp2+
        VKBOUxPQac9tWDOojFKjknOkGfbrGn3W31e/2qgV6FyoNTwkv/C7wsdshEmTHkW5eAdAYZLd4HNKS/55
        mxMR2v6q4cetPaZTlm1P1n9HrIxRunH1hLYIXXopweKGVAFh3VsBFMf2wMEytC/nWFK1uKRUnvrrUX0G
        D+Rz3wtOgDd+nirNQD8Pv2CBzlqsPw6gLdYctuKoLN+RJDPfjneqJlINqZMRzbsjrtl8tD+ilIdiUVp7
        2DVhXay8hLneG+IwzrKfB2Ioi1RKQaF05kJzHFcr0DmhGQz4b0h5mUhPp4EsgvrOD5W57yRoweMF6UjA
        LO52wLts8h/MLSgqkUZD/RSEb0IvOz1FNzQpSGa+lSCjUWz9YVmU7PFP16KJ/EwvH7AkEpVrgExeH+sE
        durGOM0R5H0efBsAT/qKwWfpR0l6+fbw82WeXgY6bXpi+VGZ/26CTHgtVufxkEl9S0E798wOkYFLomTb
        V2dk18FzwmdYwLP6DpKRq6J1Lqm1E77TdgLNYvAL+0WlQtLZm3tSNYcwWuvO6eBXVo32WEuxXMoukuFQ
        JuTIR+BNeQXfRcHgl6M0qfFh3WdYiYyNWt6j/0HZY7M8sjc2SMA4znO4v8Sl5snZS5YXs+UVFOtm2ZZu
        T5KfDvaVnf87Z3k5OJxgmPlcg57FGoFexqsFRpjxdCkDvfFwP9l54KyukXz2ijoHo8o0H99059/mD+YJ
        RkJj0Ivv0QztDk7M0qjmcxa8m1hhDjsoIrxG2Zw2lvN0bowguWb9yhIEExsf3AoexX/pISyIPnMJaz7M
        92imNCkrlLipxX8/oUbRWwnU7xZbVeiWL06r4UzEniP8IT0ztf/5bSek0RA/GBsMz7Mu0Z6DJ/7oiSNy
        MMLa9OmLBQDLViGRuXIqFY876J5QWlu/PK1rRJzItkBHFDMhm0ZafABqyPB3Vl6R3AMbG4Pm9gVd1GGH
        IjNgs03uQ6I3bfs3Z4GHv+7TtI0+qUpp5eiFRhLsiQjb3jW8/+AcAsUPQ2v1JyfLnfR7CE1yIh9ET4hO
        zpWopFxNYhz/E3gs+0DJmvBIQQTdEZ8lGTlFSksMTR4qL8dcQT+MzRrQybmc6+ogrGzp/bTtqqDvs0CP
        dAE9uwx05oVbcLg8iPGvWXmIl3iUpMwtTtCjMnTc/DIv53ziQp7nnieuPybDXomRPlBZxpmdns7N9cPl
        Ext5ikqD3Ol63eqekUkX9ESO44b5oF2HLMrYD0/gmtw4S3yzdho882vw+qHIy7LfcVFSzltKZtgr0SoB
        mwD0kIQsOYl+Gs1nkg9dQf/xk77ypd3KK/mgM0o41+gkP/8Gd0K0ywseVxm9qKdXAfo6XNbxtpSRP2RF
        tBN0ev6tyEcG9MMA3WPQEVn/mVUMJoGqeKFnbksZQZTKpjaokEi7oMBg1Xg7uHAZEtCa3SlWMYKsTS5j
        QcAQ0bdA+HvngXN6ybV8RzIUC4oR9DPUmTBZKHUvk03s+wfGsh2A3GQ+MB8azWaHBCN49PSQhGxJPgfQ
        y57lDjr5mNRj2iBclhnJRz7nHU5evkUTHx88r/nGPZFWB/qqXSlQaoEK+tAVMRboV0pUILh6ugF95ccW
        6OeBR5cpFmswr9DZ+CElm4OooF54IjwZ05gcW+AQ+CaIoTPjrXhNiKNWW6dv2r1Ihq6naUJdHw7PywYf
        UlF4PHZYPZgfHiQ3sD/Y8tpfPRsuP3vKr1rQ6RSMHtIS20kcUB88n3KxJQD/wOU+iEqE+aJSTq/C01fj
        GqMC6KAXd9APwWkaDfHVSDVtMgo4UqjXqACJTcnTbh+IBuYxOnClkpHevHb3Ka3q6On0ItOOYRHy76CX
        rCRoGnWtq4IwoFO3Tn09Toct+uAEIsWU8RYHU2byXobtnb2pqmpCq/L0947rYbEWmANpalopBHhYYrbS
        kmn0uqaIMuaEmoJuEmmloFfi6Uyk5H06kXl2CbyBhVcI7DFt8F+i9Jq7Sp3OAoFhaZLgCwjnuFO5kIfQ
        pdTCeNMzEfr2Uyzef1GkFgWVKR1SzfnLBfpshpu7MuJdRqOhvk7juIG41FzJzCl20kvnaXbpW3a1QN1N
        1UQV0QIF0mPLIpVHXRsPYC/0Pe2nIzDX9MfbKtMGQlVYktGivJNGMuLZpr0OtcF3vdzX6NVWImV7CNH4
        c3A6lRkbqbAZIolOR+BDXYDm70y+z/4tUQ+m1jqdD2cEmOpLCxmcHHm3Y9mbIHfQ+Sapy1SHzNmEIuLV
        Y1pAsc99HD3xSXjCrLcTVLOz8GDFx40wfxgunLclES9NwvVyy6xBG6hyfg8gGdZPr43Vux8CQB61agQH
        7miCZfameJn2Rrze4zDZsfiahWp0LGzjs9jnvTFWK9T+iyO1YCJl8sA51xsFUm+qIeyDyZVzh4NW6IR8
        DtdQKYyKdwrGch96OeZ2N1OrirQmdxMVgAdoBMUUSZX9TsNIYzSYkcBDcB9P4Pl7ZS9EaBejiFcEnMcr
        A3dbuS7nc4yhQc5hnwl72sbf2ef6MoXjzVyuY2Qocx9tdd2T2oJDMHvm+2P3PdcK9Mrooz76vm//C+Ba
        7W0QoNfHwX2f1rgJ+nV6k1WVE/wf1gsV2494asUAAAAASUVORK5CYII=
=======
        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
        rOqc4P+pae16Nj+XYAAAAABJRU5ErkJggg==
>>>>>>> 3a0a51800d371999c611e4d5b461bddded375ed1
</value>
  </data>
</root>