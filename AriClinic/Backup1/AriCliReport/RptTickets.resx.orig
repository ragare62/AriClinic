<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<<<<<<< HEAD
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=5.0.11.510, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
=======
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=5.0.11.316, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
>>>>>>> 3a0a51800d371999c611e4d5b461bddded375ed1
    <value>0.1in</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>